#dhf_dashboard/utils/session_state_manager.py
# --- Definitive, Corrected, and Unabridged Optimized Version ---
"""
Manages the application's session state, acting as an in-memory database.

This module provides the SessionStateManager class, which orchestrates the
initialization of the mock dataset. The data model itself is generated by a
separate, dedicated function to improve modularity and maintainability.
"""

# --- Standard Library Imports ---
import logging
import random
from datetime import date, timedelta
from typing import Any, Dict, List, Optional

# --- Third-party Imports ---
import streamlit as st

# --- Setup Logging ---
logger = logging.getLogger(__name__)


def _create_definitive_dhf_model(version: int) -> Dict[str, Any]:
    """
    Generates the complete, interconnected mock dataset for the DHF.

    This function is the single source of truth for all mock data, ensuring
    a consistent and realistic data model for the application. It is kept
    separate from the SessionStateManager class for improved code organization.

    Args:
        version (int): The data model version to bake into the dataset.

    Returns:
        Dict[str, Any]: A dictionary representing the entire DHF data model.
    """
    base_date = date(2025, 7, 1)  # Project Start Date
    demo_current_date = base_date + timedelta(days=90)  # Simulates "Today"

    # --- Data Generation Helper ---
    # Use standard library `random` to avoid numpy dependency for mock data.
    gauss = random.gauss

    return {
        "data_version": version,
        "design_plan": {
            "project_name": "Smart-Pill Drug Delivery System (SP-DDS)",
            "scope": "This project covers the design and development of a new combination product, the 'Smart-Pill', intended for the targeted oral delivery of drug XYZ for treating chronic condition ABC. The system comprises a swallowable electronic capsule (device) containing a payload of drug XYZ (drug), a companion mobile application for monitoring, and a cloud-based data backend for physician review.",
            "team_members": [
                {"role": "Project Lead", "name": "Dr. Alice Weber", "responsibility": "Overall project oversight and final DHF approval."},
                {"role": "Device Engineer", "name": "Bob Chen", "responsibility": "Hardware design, material selection, and mechanical testing."},
                {"role": "Software Engineer", "name": "Charlie Day", "responsibility": "Embedded firmware, mobile app development, and cybersecurity."},
                {"role": "Pharma Scientist", "name": "Diana Evans", "responsibility": "Drug formulation, stability studies, and release profile analysis."},
                {"role": "Quality Lead", "name": "Jose Bautista", "responsibility": "DHF owner, V&V strategy, Risk Management, and regulatory compliance."}
            ],
        },
        "risk_management_file": {
            # S=Severity, O=Occurrence, D=Detection
            "hazards": [
                {"hazard_id": "H-001", "description": "Incorrect drug dosage delivered (overdose)", "initial_S": 5, "initial_O": 3, "initial_D": 4, "final_S": 5, "final_O": 1, "final_D": 2},
                {"hazard_id": "H-002", "description": "Biocompatibility failure (material leaching)", "initial_S": 5, "initial_O": 2, "initial_D": 3, "final_S": 5, "final_O": 1, "final_D": 1},
                {"hazard_id": "H-003", "description": "Battery failure during use (no therapy)", "initial_S": 4, "initial_O": 2, "initial_D": 5, "final_S": 2, "final_O": 1, "final_D": 2},
                {"hazard_id": "H-004", "description": "Loss of data integrity (cybersecurity breach)", "initial_S": 3, "initial_O": 3, "initial_D": 2, "final_S": 3, "final_O": 1, "final_D": 1},
                {"hazard_id": "H-005", "description": "Pill casing cracks (choking hazard)", "initial_S": 5, "initial_O": 1, "initial_D": 2, "final_S": 5, "final_O": 1, "final_D": 1},
            ],
            "dfmea": [
                {"id": "DFMEA-01", "failure_mode": "Pill casing seal failure", "potential_effect": "Drug leakage, incorrect dose", "S": 5, "O": 2, "D": 2, "mitigation": "Redesigned seal geometry, add seal integrity test."},
                {"id": "DFMEA-02", "failure_mode": "Software algorithm miscalculates release time", "potential_effect": "Incorrect dose timing", "S": 4, "O": 3, "D": 2, "mitigation": "Add checksums, implement robust unit testing, code reviews."},
            ],
            "pfmea": [
                {"id": "PFMEA-01", "failure_mode": "Incorrect polymer mixing ratio", "potential_effect": "Casing brittle, fails biocompatibility", "S": 5, "O": 2, "D": 4, "mitigation": "Automated mixing system with ratio alarms."},
                {"id": "PFMEA-02", "failure_mode": "Contamination during drug filling", "potential_effect": "Adverse patient reaction", "S": 5, "O": 2, "D": 3, "mitigation": "Perform filling in certified cleanroom, regular environmental monitoring."},
            ],
        },
        "human_factors": {
            "use_scenarios": [
                {"use_scenario": "Patient takes daily pill", "user_task": "Swallows pill with water", "potential_use_error": "Takes pill without water", "potential_harm": "Pill lodges in esophagus", "related_hazard_id": "H-005"}
            ]
        },
        "design_inputs": {
            "requirements": [
                {"id": "UN-001", "source_type": "User Need", "description": "The system must be easy for an elderly patient to use daily without assistance.", "is_risk_control": False, "related_hazard_id": ""},
                {"id": "UN-002", "source_type": "User Need", "description": "The pill must be comfortable to swallow.", "is_risk_control": False, "related_hazard_id": ""},
                {"id": "SR-001", "source_type": "QSR (Device)", "description": "The pill casing shall have a diameter less than 8mm.", "is_risk_control": False, "related_hazard_id": ""},
                {"id": "SR-002", "source_type": "QSR (Device)", "description": "Device must be compatible with EtO sterilization.", "is_risk_control": False, "related_hazard_id": ""},
                {"id": "RC-001", "source_type": "Risk Control", "description": "The release mechanism shall be tested to a 6-sigma reliability for dose accuracy.", "is_risk_control": True, "related_hazard_id": "H-001"},
                {"id": "RC-002", "source_type": "Risk Control", "description": "Casing material must pass all ISO 10993 biocompatibility tests.", "is_risk_control": True, "related_hazard_id": "H-002"},
            ]
        },
        "design_outputs": {
            "documents": [
                {"id": "DO-001", "title": "User Needs Document", "phase": "User Needs", "status": "Approved", "linked_input_id": "UN-001"},
                {"id": "DO-002", "title": "System Requirements Spec", "phase": "Design Inputs", "status": "Approved", "linked_input_id": "UN-002"},
                {"id": "SPEC-001", "title": "Pill Casing Final CAD Model", "phase": "Design Outputs", "status": "In Review", "linked_input_id": "SR-001"},
                {"id": "SPEC-002", "title": "Dose Release Mechanism Spec", "phase": "Design Outputs", "status": "Draft", "linked_input_id": "RC-001"},
                {"id": "PROTO-001", "title": "Biocompatibility Test Protocol", "phase": "V&V", "status": "Draft", "linked_input_id": "RC-002"},
            ]
        },
        "design_reviews": {
            "reviews": [
                {
                    "date": str(demo_current_date - timedelta(days=30)), "attendees": "A. Weber, B. Chen, Jose Bautista", "notes": "Phase 1 Gate Review completed. Approved to proceed to detailed design.", "is_gate_review": True,
                    "action_items": [
                        {"id": "AI-DR1-01", "description": "Finalize biocompatible polymer selection.", "owner": "B. Chen", "due_date": str(demo_current_date - timedelta(days=15)), "status": "Completed"},
                        {"id": "AI-DR1-02", "description": "Update Risk Management File with review outputs.", "owner": "Jose Bautista", "due_date": str(demo_current_date + timedelta(days=5)), "status": "In Progress"},
                        {"id": "AI-DR1-03", "description": "Draft V&V Master Plan.", "owner": "Jose Bautista", "due_date": str(demo_current_date + timedelta(days=15)), "status": "Open"},
                        {"id": "AI-DR1-04", "description": "Prototype firmware for Bluetooth comms.", "owner": "C. Day", "due_date": str(demo_current_date - timedelta(days=2)), "status": "Overdue"},
                    ]
                }
            ]
        },
        "design_verification": {
            # OPTIMIZATION: Added `input_verified_id` for stronger, more realistic traceability.
            "tests": [
                {"id": "VER-001", "test_name": "Pill Diameter Test", "status": "Completed", "output_verified": "SPEC-001", "input_verified_id": "SR-001", "risk_control_verified_id": ""},
                {"id": "VER-002", "test_name": "Dose Accuracy Assay", "status": "In Progress", "output_verified": "SPEC-002", "input_verified_id": "RC-001", "risk_control_verified_id": "RC-001"},
                {"id": "VER-003", "test_name": "ISO 10993 Biocompatibility Study", "status": "Not Started", "output_verified": "PROTO-001", "input_verified_id": "RC-002", "risk_control_verified_id": "RC-002"},
            ]
        },
        "design_validation": {
            "studies": [
                {"id": "VAL-001", "study_name": "Simulated Use Human Factors Study (n=15)", "user_need_validated": "UN-001", "risk_control_effectiveness": True, "result": "In Progress", "report_file": ""}
            ]
        },
        "design_transfer": {
            "activities": [
                {"activity": "Installation Qualification (IQ) - Assembly Line A", "responsible_party": "Mfg. Eng.", "status": "Completed", "completion_date": str(demo_current_date - timedelta(days=45)), "evidence_link": "IQ-RPT-01.pdf"},
                {"activity": "Operational Qualification (OQ) - Assembly Line A", "responsible_party": "Mfg. Eng.", "status": "In Progress", "completion_date": None, "evidence_link": ""},
            ]
        },
        "design_changes": {
            "changes": [
                {"id": "DCR-001", "description": "Change battery supplier from BatteryCorp to PowerPlus for improved cycle life.", "reason": "Improved reliability based on new test data.", "impact_analysis": "Minimal impact. Requires regression testing.", "approval_status": "Pending", "approval_date": None}
            ]
        },
        "quality_system": {
            "capa_records": [{"id": "CAPA-01", "status": "Closed", "source": "Internal Audit"}, {"id": "CAPA-02", "status": "Open", "source": "Supplier Corrective Action"}],
            "supplier_audits": [{"supplier": "PillCasing Inc.", "status": "Pass", "date": str(base_date + timedelta(days=20))}, {"supplier": "BatteryCorp", "status": "Pass with Observations", "date": str(base_date + timedelta(days=35))}],
            "continuous_improvement": [{"date": str(base_date + timedelta(days=15)), "ftr_rate": 88, "copq_cost": 15000}, {"date": str(base_date + timedelta(days=40)), "ftr_rate": 92, "copq_cost": 11500}],
            "cgmp_compliance": {
                "stability_studies": [
                    {"id": "STAB-01", "duration": "3 Months", "condition": "Accelerated", "status": "Completed - Pass"},
                    {"id": "STAB-02", "duration": "6 Months", "condition": "Real-Time", "status": "In Progress"}
                ],
                "batch_record_review": {"total": 5, "passed": 4, "failed": 1}
            },
            "spc_data": {"target": 7.95, "usl": 8.00, "lsl": 7.90, "measurements": [gauss(7.95, 0.02) for _ in range(50)]},
            "hypothesis_testing_data": {"line_a": [gauss(99.8, 0.2) for _ in range(30)], "line_b": [gauss(99.9, 0.15) for _ in range(30)]},
            "doe_data": [
                {"run": 1, "temperature": -1, "pressure": -1, "seal_strength": 80.5}, {"run": 2, "temperature": 1, "pressure": -1, "seal_strength": 90.2},
                {"run": 3, "temperature": -1, "pressure": 1, "seal_strength": 82.1}, {"run": 4, "temperature": 1, "pressure": 1, "seal_strength": 94.8},
                {"run": 5, "temperature": 0, "pressure": 0, "seal_strength": 85.3}, {"run": 6, "temperature": 0, "pressure": 0, "seal_strength": 85.9},
            ]
        },
        "project_management": {
            "tasks": [
                {"id": "NEEDS", "name": "User Needs & Planning", "start_date": str(base_date), "end_date": str(base_date + timedelta(days=30)), "status": "Completed", "completion_pct": 100, "days_taken": 28, "dependencies": "", "sign_offs": {"R&D": "✅", "Quality": "✅", "Marketing": "✅"}},
                {"id": "INPUTS", "name": "Design Inputs", "start_date": str(base_date + timedelta(days=31)), "end_date": str(base_date + timedelta(days=60)), "status": "Completed", "completion_pct": 100, "days_taken": 25, "dependencies": "NEEDS", "sign_offs": {"R&D": "✅", "Quality": "✅", "Regulatory": "✅"}},
                {"id": "OUTPUTS", "name": "Design Outputs", "start_date": str(base_date + timedelta(days=61)), "end_date": str(base_date + timedelta(days=120)), "status": "In Progress", "completion_pct": 50, "days_taken": None, "dependencies": "INPUTS", "sign_offs": {"R&D": "In Progress", "Quality": "Pending", "Regulatory": "Pending"}},
                {"id": "V&V", "name": "Verification & Validation", "start_date": str(base_date + timedelta(days=121)), "end_date": str(base_date + timedelta(days=200)), "status": "Not Started", "completion_pct": 0, "days_taken": None, "dependencies": "OUTPUTS", "sign_offs": {"R&D": "Pending", "Quality": "Pending"}},
                {"id": "TRANSFER", "name": "Design Transfer", "start_date": str(base_date + timedelta(days=201)), "end_date": str(base_date + timedelta(days=240)), "status": "Not Started", "completion_pct": 0, "days_taken": None, "dependencies": "V&V", "sign_offs": {"Manufacturing": "Pending", "Quality": "Pending"}}
            ]
        },
        "quality_by_design": {
            "elements": [
                {"cqa": "Accurate Drug Dosage (10mg ± 0.5mg)", "links_to_req": "RC-001", "cm_attributes": ["Drug Particle Size Distribution", "Polymer Viscosity"], "cp_parameters": ["Molding Temperature", "Nozzle Pressure", "Mixing Speed"]},
                {"cqa": "Casing Biocompatibility", "links_to_req": "RC-002", "cm_attributes": ["Polymer Grade Purity", "Absence of Leachables/Extractables"], "cp_parameters": ["Curing Time", "Sterilization Cycle Parameters"]}
            ]
        }
    }


class SessionStateManager:
    """
    Handles the initialization and access of the application's session state.

    This manager populates `st.session_state` with a complete mock DHF dataset
    if it doesn't exist or if the data version is outdated. It provides
    helper methods to safely get and update data from the state.
    """
    _DHF_DATA_KEY = "dhf_data"
    # Incrementing version forces a reload of the data model on app rerun
    # if the code changes, ensuring developers always have the latest mock data.
    _CURRENT_DATA_VERSION = 20

    def __init__(self):
        """
        Initializes the session state, loading the mock data if necessary.
        """
        session_data = st.session_state.get(self._DHF_DATA_KEY)
        if not session_data or session_data.get("data_version") != self._CURRENT_DATA_VERSION:
            st.toast(f"Loading Definitive Data Model (v{self._CURRENT_DATA_VERSION})...", icon="📦")
            logger.info(f"Initializing session state with data model v{self._CURRENT_DATA_VERSION}.")
            st.session_state[self._DHF_DATA_KEY] = _create_definitive_dhf_model(self._CURRENT_DATA_VERSION)

    def get_data(self, primary_key: str, secondary_key: Optional[str] = None) -> Any:
        """
        Safely retrieves data from the session state.

        Args:
            primary_key (str): The first-level key in the data dictionary.
            secondary_key (Optional[str]): The second-level key, if applicable.

        Returns:
            Any: The requested data. Returns an empty dict or list if the key(s)
                 are not found to prevent downstream errors.
        """
        try:
            data_store = st.session_state[self._DHF_DATA_KEY]
            if secondary_key:
                return data_store.get(primary_key, {}).get(secondary_key, [])
            else:
                return data_store.get(primary_key, {})
        except KeyError:
            logger.warning(f"Attempted to access non-existent session state key: '{self._DHF_DATA_KEY}'")
            return {} if secondary_key is None else []

    def update_data(self, data: Any, primary_key: str, secondary_key: Optional[str] = None) -> None:
        """
        Updates data in the session state.

        Args:
            data (Any): The new data to be stored.
            primary_key (str): The first-level key in the data dictionary.
            secondary_key (Optional[str]): The second-level key, if applicable.
        """
        if secondary_key:
            if primary_key not in st.session_state[self._DHF_DATA_KEY]:
                st.session_state[self._DHF_DATA_KEY][primary_key] = {}
            st.session_state[self._DHF_DATA_KEY][primary_key][secondary_key] = data
            logger.info(f"Session state updated for key path: {primary_key}.{secondary_key}")
        else:
            st.session_state[self._DHF_DATA_KEY][primary_key] = data
            logger.info(f"Session state updated for key: {primary_key}")
